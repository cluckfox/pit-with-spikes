; MIT License
;
; Copyright Â© 2021 CluckFox
; 
; Permission is hereby granted, free of charge, to any person obtaining a copy
; of this software and associated documentation files (the "Software"), to deal
; in the Software without restriction, including without limitation the rights
; to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
; copies of the Software, and to permit persons to whom the Software is
; furnished to do so, subject to the following conditions:
; 
; The above copyright notice and this permission notice shall be included in all
; copies or substantial portions of the Software.
; 
; THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
; IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
; AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
; LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
; OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
; SOFTWARE.

.include "nes.inc"
.include "global.inc"
.include "fault_frame.inc"
.include "ldvram.inc"
.include "sprite.inc"

.export fault_main
.exportzp fault_frame
.import	ppu_screen_on
.importzp nmis, oam_used

.ZEROPAGE
fault_frame:	.tag FAULTFR

.segment "DATA00"

; chr, nametable, and palette binaries generated by
; Shiru's NESST
fault_chr:
.incbin "obj/nes/fault.chr"

fault_pal:
.incbin "obj/nes/fault.pal"
.incbin "obj/nes/fault.pal"

fault_nt:
.incbin "obj/nes/fault.nam"

.segment "CODE00"

; routines private to this module go here
.include "fault_impl.inc"

.proc	fault_main
	jsr	FAULT_IMPL::quick_reset
	jsr	FAULT_IMPL::enable_nmi
	lda	nmis
@stall:	cmp	nmis
	beq	@stall
	jsr	FAULT_IMPL::load_graphics
	lda	fault_frame+1
	sec
	sbc	#2
	sta	fault_frame+1
	bcs	forever
	dec	fault_frame+2
forever:
tmpX=64
	SPR	#tmpX, #90, fault_frame, #1
	SPR	#tmpX+24, #90, fault_frame+1, #1
	SPR	#tmpX+16, #90, fault_frame+2, #1
	lda	nmis
@stall:	cmp	nmis
	beq	@stall
	lda	#>OAM
	sta	OAM_DMA
	lda 	#0
	sta	oam_used
	ldx	#0
	ldy	#0
	lda	#VBLANK_NMI|BG_0000|OBJ_1000|NT_2000
	sec
	jsr	ppu_screen_on
	jmp	forever
.endproc


; vim: set syntax=asm_ca65:
